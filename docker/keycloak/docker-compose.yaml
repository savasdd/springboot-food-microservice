version: '3.9'

services:
  postgres:
    image: postgres:14.1-alpine
    container_name: postgres_kyc_db
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "postgres", "-U", "root" ]
      timeout: 45s
      interval: 10s
      retries: 10
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: keycloak
      POSTGRES_HOST: postgres
    networks:
      - local
    expose:
      - "54322"
    ports:
      - "54322:54322"
    volumes: 
      - kycdb_volume:/var/lib/postgresql/data
    command: -p 54322

  keycloak:
    container_name: keycloak
    build:
      context: .
      args:
        KEYCLOAK_VERSION: 22.0.0
    command: ['start', '--optimized']
    depends_on:
      - "postgres"
    environment:
      JAVA_OPTS_APPEND: -Dkeycloak.profile.feature.upload_scripts=enabled
      KC_DB_PASSWORD: postgres
      KC_DB_URL: jdbc:postgresql://postgres/keycloak
      KC_DB_USERNAME: postgres
      KC_HEALTH_ENABLED: 'true'
      KC_HTTP_ENABLED: 'true'
      KC_METRICS_ENABLED: 'true'
      # KC_HOSTNAME: keycloak.com.au
      # KC_HOSTNAME_PORT: 8180
      KC_HOSTNAME_URL: http://keycloak.com.au:8180
      KC_PROXY: reencrypt
      KEYCLOAK_ADMIN: admin_keycloak
      KEYCLOAK_ADMIN_PASSWORD: 123456
    ports:
      - "8180:8080"
      - "8787:8787" # debug port
    networks:
      - local

  # keycloak:
  #     image: quay.io/keycloak/keycloak:legacy
  #     container_name: keycloak_oauth
  #     environment:
  #       DB_VENDOR: POSTGRES
  #       #DB_ADDR: 192.168.1.23:5432
  #       DB_ADDR: db
  #       DB_DATABASE: keycloak
  #       DB_USER: postgres
  #       DB_SCHEMA: public
  #       DB_PASSWORD: postgres
  #       KEYCLOAK_USER: admin_keycloak
  #       KEYCLOAK_PASSWORD: 123456
  #       KEYCLOAK_FRONTEND_URL: http://localhost:8043/auth
  #     ports:
  #       - 8043:8080
  #       - 8443:8443
  #     depends_on:
  #       - db

networks:
  local:
    name: local
    driver: bridge

volumes:
  kycdb_volume:
